services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    env_file:
      - .env-files/.env
    ports:
      - "8000:8000"
    networks:
      - app-network
    command: >
      sh -c "cd /app; 
             python manage.py migrate &&
             python manage.py setup_industries &&
             python manage.py import_thriller_movies &&
             python manage.py runserver 0.0.0.0:8000"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health/ || curl -f http://localhost:8000/ || exit 0"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 60s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    env_file:
      - .env-files/.env.frontend
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      backend:
        condition: service_healthy

networks:
  app-network:
    driver: bridge

volumes:
  static_volume:
  media_volume: 